#version 430
layout (local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

struct ParticleProps {
    vec2 position;
    vec2 velocity;
};

uniform float gridSize;
uniform int gridCols;

layout (binding = 0) buffer keysBuffer {
    uint keys[];
};

//layout (binding = 1) buffer indicesBuffer {
//    Indices indices[];
//};

layout (binding = 1) buffer positionsBuffer {
    ParticleProps particles[];
};

void main() {
    uint id = gl_GlobalInvocationID.x;
//    if(id > numValues)
    vec2 position = particles[id].position;

    // Get its grid index
    int xGrid = int(position.x / gridSize);
    int yGrid = int(position.y / gridSize);
    uint cellId = xGrid + yGrid * gridCols;

//    indices[id].index = id;
    keys[id] = cellId;
}
