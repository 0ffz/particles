#version 430
layout (local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

struct ParticleProps {
    vec2 position;
};

uniform int gridSize;
uniform int gridCols;

struct Indices {
    uint index;
};

layout (binding = 0) buffer keysBuffer {
    Indices keys[];
};

layout (binding = 1) buffer indicesBuffer {
    Indices indices[];
};

layout (binding = 2) buffer positionsBuffer {
    ParticleProps positions[];
};

void main() {
    uint id = gl_GlobalInvocationID.x;
    vec2 position = positions[id].position;

    // Get its grid index
    int xGrid = int(position.x / gridSize);
    int yGrid = int(position.y / gridSize);
    uint cellId = xGrid + yGrid * gridCols;

    indices[id].index = id;
    keys[id].index = cellId;
}
