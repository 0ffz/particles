#version 430
layout (local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

uniform int numValues;
uniform int groupWidth;
uniform int groupHeight;
uniform int stepIndex;

struct ParticleProps {
    vec2 position;
};

layout (binding = 0) buffer keysBuffer {
    uint keys[];
};

layout (binding = 1) buffer valuesBuffer {
    ParticleProps values[];
};

layout (binding = 2) buffer prevValuesBuffer {
    ParticleProps prevValues[];
};

void main() {
    uint i = gl_GlobalInvocationID.x;
    uint h = i & (groupWidth - 1);
    uint indexLow = h + (groupHeight + 1) * (i / groupWidth);
    uint indexHigh = indexLow + (stepIndex == 0 ? groupHeight - 2 * h : (groupHeight + 1) / 2);

    if (indexHigh >= numValues) return;

    uint keyLow = keys[indexLow];
    uint keyHigh = keys[indexHigh];
    ParticleProps valueLow = values[indexLow];
    ParticleProps valueHigh = values[indexHigh];
    ParticleProps prevValueLow = prevValues[indexLow];
    ParticleProps prevValueHigh = prevValues[indexHigh];

    if (keyLow > keyHigh) {
        keys[indexLow] = keyHigh;
        keys[indexHigh] = keyLow;
        values[indexLow] = valueHigh;
        values[indexHigh] = valueLow;
        prevValues[indexLow] = prevValueHigh;
        prevValues[indexHigh] = prevValueLow;
    }
}
